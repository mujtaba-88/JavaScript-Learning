const lufthansa = {
  airline: 'Lufthansa',
  iataCode: 'LH',
  bookings: [],
  book(flightNum, name){
    console.log(`${name} booked a seat on ${this.airline} flight ${this.iataCode}${flightNum}`);
    this.bookings.push({flight: `flight: ${this.iataCode}${flightNum}`, name});
  }
};

lufthansa.book(239, 'Mujtaba');
lufthansa.book(235, 'Ali');
console.log(lufthansa);

const eurowings = {
  airline: 'EuroWings',
  iataCode: 'EW',
  bookings: [],
};

// Using first class functions.
const book = lufthansa.book;
// Does not work. Due to this keyword.
// book(23, 'Sarah');

// Call Method
book.call(eurowings, 23, 'Sarah Williams');
console.log(eurowings);

book.call(lufthansa, 25, 'Mary Cooper');
console.log(lufthansa);

const swiss = {
  airline: 'Swiss Airline',
  iataCode: 'LX',
  bookings: [],
}

book.call(swiss, 583, 'Mary Cooper');
console.log(swiss);


// Apply Method
// Doing exactly like the call method. But the only difference is apply does not recive a list of arguments after this keyword // but insted receive an array of the arguments.
const flightData = [583, 'George Cooper'];
book.apply(swiss, flightData);
console.log(swiss);

book.call(swiss, ...flightData);

//////////BIND METHOD
// Bind also allow us to manually set this keyword for any function call. Now the difference is bind does ot immidealtely call  // the function, Instead its return a new function where this keyword is bound.

// book.call(eurowings, 23, 'Sarah Williams');

const bookEw = book.bind(eurowings);
const bookLh = book.bind(lufthansa);
const bookLx = book.bind(swiss);
bookEw(23, 'Steve Williams');

const bookEW23 = book.bind(eurowings, 23);
bookEW23('Jonas');
bookEW23('Martha Cooper');

// With Event Listeners
lufthansa.planes = 300;
lufthansa.buyPlane = function(){
  console.log(this);
  this.planes++;
  console.log(this.planes);
}

document.querySelector('.buy').addEventListener(click, lufthansa.buyPlane.bind(lufthansa));

// Partial application
const addTax = (rate, value) => value + value * rate;
console.log(addTax(0.2, 100));

const addVAT = addTax.bind(null, 0.23); // Order of argument is important
// addVAT = value => value + value * 0.23;// Same like this

console.log(addVAT(100));
console.log(addVAT(23));

// Challenge do this thing using returning function.
const addTaxRate = function(rate){
  return function (value) {
    return value + value * rate;
  };
};

const addVAT2 = addTaxRate(0.23);
console.log(addVAT2(100));
console.log(addVAT2(23));
