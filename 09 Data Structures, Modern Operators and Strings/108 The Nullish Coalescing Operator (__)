// https://replit.com/@MujtabaAbid/108-The-Nullish-Coalescing-Operator#index.js


'use strict';

const restaurant = {
  name: 'Classico Italiano',
  location: 'Via Angelo Tavanti 23, Firenze, Italy',
  categories: ['Italian', 'Pizzeria', 'Vegetarian', 'Organic'],
  starterMenu: ['Focaccia', 'Bruschetta', 'Garlic Bread', 'Caprese Salad'],
  mainMenu: ['Pizza', 'Pasta', 'Risotto'],
  openingHours: {
    thu: {
      open: 12, 
      close: 22,
    },
    fri: {
      open: 12, 
      close: 22,
    },
    sat: {
      open: 12, 
      close: 22,
    },
  },
order: function(starterIndex, mainIndex) {
    return [this.starterMenu[starterIndex], this.mainMenu[mainIndex]];
  },

  orderDelivery: function({ starterIndex = 1, mainIndex = 0, time = '20:00', address }) {
    console.log(
      `Order received! ${this.starterMenu[starterIndex]} and ${this.mainMenu[mainIndex]} will be delivered to ${address} at ${time}`
    );
  },

  orderPasta: function(ing1, ing2, ing3){
    console.log(`Here is your delicious pasta with ${ing1}, ${ing2} and ${ing3}`)
  },

  // Rest parameter so that function have at least one parameter and other are optional.
  orderPizza: function(mainIngredient, ...otherIngredient){
    console.log(mainIngredient);
    console.log(otherIngredient);
  },
};

restaurant.numGuests = 23;
const guests = restaurant.numGuests || 10;
console.log(guests);

// Nullish: null and undefined (NOT or '')
const guestCorrect = restaurant.numGuests ?? 10;
console.log(guestCorrect);
