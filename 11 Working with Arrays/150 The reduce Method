// 150 The reduce Method
// Accumultor => Snowball
// acc => accumulator, curr => current element, i = index, arr = array, 
// The value 0 after callback function is initial value
 const balance = movements.reduce(function(acc, curr, i, arr) {
   console.log(`Iteration ${i}: + ${acc}`);
   return acc + curr
 }, 0);
 console.log(balance);

const balance = movements.reduce((acc, curr, i, arr) => acc + curr, 0);
console.log(balance);

// Maximum number by using reduce
const max = movements.reduce((acc, mov) => {
  if ( acc > max )
  return acc;
  else 
  return mov;
}, movements[0]);
console.log(max);

 const calcDisplayBalance = function (movements) {
    const balance = movements.reduce((acc, mov) => acc + mov, 0);
    labelBalance.textContent = `${balance}â‚¬`;
  };
calcDisplayBalance(account1.movements);
